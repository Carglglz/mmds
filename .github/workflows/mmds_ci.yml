name: MicroPython-LVGL CI

on:
  push:
    # tags-ignore:
    #   - '**'
    tags:
        - '**'
    branches:
      - main
  pull_request:


concurrency:
  group: ${{ github.ref }}-${{ github.workflow }} 
  cancel-in-progress: true

jobs:
  build-lvgl-micropython:

    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        port: ['unix', 'stm32', 'esp32']
    steps:
    - uses: ammaraskar/gcc-problem-matcher@master
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - uses: actions/checkout@v4
      with:
        repository: Carglglz/mmds
        ssh-strict: true
        ssh-user: git
        persist-credentials: true
        clean: true
        sparse-checkout-cone-mode: true
        fetch-depth: 0
        fetch-tags: false
        show-progress: true
        lfs: true
        submodules: true
        set-safe-directory: true


    - name: Initialize lv_binding_micropython submodule
      run: git submodule update --init --recursive ./build-mplv/user_modules/lv_binding_micropython

    - name: Install LVGL Dependencies
      run: |
        sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe restricted multiverse"
        sudo apt-get update -y -qq
        sudo apt-get install libsdl2-dev parallel libfreetype-dev librlottie-dev libavformat-dev libavcodec-dev libswscale-dev libavutil-dev
        python3 -m pip install pillow

    - name: Build mpy-cross
      working-directory: ./build-mplv/micropython
      run: make -j $(nproc) -C mpy-cross

    - name: Update ${{ matrix.port }} port submodules
      if: matrix.port != 'esp32'
      working-directory: ./build-mplv/micropython
      run: make -C ports/${{ matrix.port}} DEBUG=1 submodules

    - name: Install MicroPython unix dependencies
      if: matrix.port == 'unix'
      working-directory: ./build-mplv/micropython
      run: make -j $(nproc) -C ports/unix DEBUG=1 deplibs

    - name: Build unix port
      if: matrix.port == 'unix'
      working-directory: ./build-mplv/micropython
      run: make -j $(nproc) -C ports/unix VARIANT_DIR=../../../ports/unix/variants/UNIX-LVGL


    - name: Install MicroPython stm32 dependencies
      if: matrix.port == 'stm32'
      working-directory: ./build-mplv/micropython
      run: source tools/ci.sh && ci_stm32_setup

    - name: Build stm32 port
      if: matrix.port == 'stm32'
      working-directory: ./build-mplv/micropython
      run: make -j $(nproc) -C ports/stm32 BOARD_DIR=../../../ports/stm32/boards/PYBOARD-LVGL

    - name: Build esp32 port
      if: matrix.port == 'esp32'
      working-directory: ./build-mplv/micropython
      run:  | 
        source tools/ci.sh && ci_esp32_idf_setup
        source tools/ci.sh && ci_esp32_build_common
        make -j $(nproc) -C ports/esp32 BOARD_DIR=../../../ports/esp32/boards/ESP32-LVGL

    - name: Run MicroPython Tests
      if: matrix.port == 'unix'
      working-directory: ./build-mplv/micropython
      run: MICROPY_MICROPYTHON=ports/unix/build-UNIX-LVGL/micropython ./tests/run-tests.py -d tests/basics

    - name: Run mmds mono API Tests
      if: matrix.port == 'unix'
      working-directory: ./build-mplv/micropython
      run: MICROPY_MICROPYTHON=ports/unix/build-UNIX-LVGL/micropython ./tests/run-tests.py -d ../../mmds/tests/ci

    - name: Process mmds Tests Artifacts
      if: matrix.port == 'unix'
      working-directory: ./mmds/tests
      run: ./imageconvert.py ci/*.bin
    
    - name: Upload mmds Test Artifacts
      if: matrix.port == 'unix'
      uses: actions/upload-artifact@v4
      with:
        name: mono API Tests Screenshots
        path: ./mmds/tests/ci/*.png 

    - name: Upload PYBOARD-LVGL firmware
      if: matrix.port == 'stm32'
      uses: actions/upload-artifact@v4
      with:
        name: pyb-micropython-lvgl-v1.26.dfu
        path: ./build-mplv/micropython/ports/stm32/build-PYBOARD-LVGL/firmware.dfu 


    - name: Upload ESP32-LVGL firmware
      if: matrix.port == 'esp32'
      uses: actions/upload-artifact@v4
      with:
        name: esp32-micropython-lvgl-v1.26.bin
        path: ./build-mplv/micropython/ports/esp32/build-ESP32-LVGL/firmware.bin 



  build-lvgl-micropython-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: Carglglz/mmds
        ssh-strict: true
        ssh-user: git
        persist-credentials: true
        clean: true
        sparse-checkout-cone-mode: true
        fetch-depth: 0
        fetch-tags: false
        show-progress: true
        lfs: true
        submodules: true
        set-safe-directory: true
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Initialize lv_binding_micropython submodule
      run: git submodule update --init --recursive ./build-mplv/user_modules/lv_binding_micropython

    - name: Install LVGL Dependencies

      run: brew install SDL2

    - name: Build mpy-cross
      working-directory: ./build-mplv/micropython
      run: make -C mpy-cross

    - name: Update port submodules
      working-directory: ./build-mplv/micropython
      run: make -C ports/unix submodules

    - name: Build unix port
      working-directory: ./build-mplv/micropython
      run: make -C ports/unix VARIANT_DIR=../../../ports/unix/variants/UNIX-LVGL

